# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Download repository
        uses: actions/checkout@v3.1.0

      - name: Set up JDK
        uses: actions/setup-java@v3.7.0
        with:
          java-version: 19
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3.0.11
        env:
          cache-name: cache-mvn-temurin-19
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Test with Maven
        run: mvn -B test -Djava.version=18 --file pom.xml

#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build backend image
        uses: mamezou-tech/buildpacks-action@v0.6.0
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/spring-on-k8s
          path: .
          builder: gcr.io/paketo-buildpacks/builder:base
          env: 'BP_JVM_VERSION=19.*'
      - name: Push backend image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-on-k8s:latest